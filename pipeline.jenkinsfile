pipeline {
    agent any

    environment{
        dockerImage = ''
        registry = 'iskifogl/bfcm-api'
        registryCredential = 'dockerhub_id'
    }
    
    stages {
        stage("Checkout"){
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/iskifogl/bcfm-api']]])
            }
        }
        stage("Build Docker Image"){
            steps{
                script{
                    dockerImage = docker.build registry
                }
            }
        }
        stage('Uploading Image to DockerHub'){
            steps{
                script{
                        docker.withRegistry('', registryCredential){
                        dockerImage.push()
                    }
                }
            }
        }
        stage('Docker Stop Container'){
            steps{
                   // sh'docker rm -f $(docker ps -aq)'
                   sh 'docker ps -f name=bfcm-apiContainer -q | xargs --no-run-if-empty docker container stop'
                   sh 'docker container ls -a -fname=bfcm-apiContainer -q | xargs -r docker container rm'    
                   sh 'docker ps -f name=mypythonappContainer -q | xargs --no-run-if-empty docker container stop'
                   sh 'docker container ls -a -fname=mypythonappContainer -q | xargs -r docker container rm'
                
            }
        }
    
        // Running Docker container, make sure port 8096 is opened in 
        stage('Docker Run') {
            steps{
              script {
              dockerImage.run("-p 9090:5000 --rm --name bfcm-apiContainer")
            }
        }
    }}}
